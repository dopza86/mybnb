# Generated by Django 3.1 on 2020-08-08 12:56

import core.managers
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='이름')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='성')),
                ('avatar', models.ImageField(blank=True, upload_to='avatars', verbose_name='사진')),
                ('gender', models.CharField(blank=True, choices=[('남자', '남자'), ('여자', '여자'), ('기타', '기타')], max_length=16, verbose_name='gender')),
                ('bio', models.TextField(blank=True, default='', verbose_name='bio')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='birthdate')),
                ('language', models.CharField(blank=True, choices=[('ko', '한국어'), ('en', 'english'), ('cn', '汉语')], default='ko', max_length=2, verbose_name='language')),
                ('currency', models.CharField(blank=True, choices=[('krw', 'krw'), ('usd', 'usd'), ('rmb', 'rmb')], default='krw', max_length=3, verbose_name='사용화폐')),
                ('superhost', models.BooleanField(default=False, verbose_name='슈퍼호스트')),
                ('email_verified', models.BooleanField(default=False, verbose_name='메일인증')),
                ('email_secret', models.CharField(blank=True, default='', max_length=20, verbose_name='메일인증키')),
                ('login_method', models.CharField(choices=[('email', '이메일'), ('github', '깃허브'), ('kakao', '카카오'), ('google', '구글')], default='email', max_length=50, verbose_name='로그인 방법')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='이메일')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자',
            },
            managers=[
                ('objects', core.managers.CustomUserManager()),
            ],
        ),
    ]
